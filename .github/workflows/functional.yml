name: Functional Test

on:
  push:

env:
  IMAGE_NAME: localhost:5000/orion-ld-test:latest
  IGNORE_TEST: '0706_direct_https_notifications/direct_https_notifications.test 0706_direct_https_notifications/direct_https_notifications_no_accept_selfsigned.test 2015_notification_templates/notification_templates_cache_refresh.test 0000_ipv6_support/ipv4_ipv6_both.test 0740_crash_with_json_object_for_attributes/json_object_format.test'

jobs:
  build-test-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          file: docker/Dockerfile-test
          tags: ${{ env.IMAGE_NAME }}
          outputs: type=docker,dest=/tmp/test-image.tar

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: test-image
          path: /tmp/test-image.tar

  test:
    runs-on: ubuntu-18.04
    needs: build-test-image
    services:
      mosquitto:
        image: eclipse-mosquitto:1.6
        ports:
          - 1883:1883
          - 9001:9001
      postgres:
        image: postgis/postgis:12-3.1-alpine
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_HOST_AUTH_METHOD: trust
        ports:
          - 5432:5432
      mongodb:
        image: mongo:4.4
        ports:
          - 27017:27017
    strategy:
      fail-fast: true
      matrix:
        test: [ 'functional_0_431','functional_432_746', 'functional_747_1105', 'functional_1106_end', 'unit' ]

    steps:
      - uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: test-image
          path: /tmp

      - name: Load Docker image
        run: |
          docker load --input /tmp/test-image.tar

      - name: Run functional test
        run: |
          docker run --rm --network host -v $(pwd):/opt/orion -e CB_FT_VERBOSE=true -e CB_SKIP_FUNC_TESTS='${{ env.IGNORE_TEST}}' -e ORIONLD_CACHED_CONTEXT_DIRECTORY=/opt/orion/ldcontexts -e CB_FT_VERBOSE=ON ${{ env.IMAGE_NAME }} -s ${{ matrix.test }} -dqt
