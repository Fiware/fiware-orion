# Copyright 2021 FIWARE Foundation e.V.
#
# This file is part of Orion-LD Context Broker.
#
# Orion-LD Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion-LD Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion-LD Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# orionld at fiware dot org

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Subscription Creation with an @context that doesn't exist

--SHELL-INIT--
export BROKER=orionld
dbInit CB
brokerStart CB 0-255

--SHELL--

#
# 01. Create a subscription with an @context that doesn't exist
# 02. Create a subscription with an @context that does exist
#


echo "01. Create a subscription with an @context that doesn't exist"
echo "============================================================="
payload='{
  "description": "Notify me of all feedstock changes",
  "type": "Subscription",
  "entities": [
    {
      "type": "FillingSensor"
    }
  ],
  "watchedAttributes": ["filling"],
  "notification": {
    "attributes": ["filling", "location"],
    "format": "normalized",
    "endpoint": {
      "uri": "http://quantumleap:8668/v2/notify",
      "accept": "application/json"
    }
  },
   "@context": "http://fiware.github.io/NGSI-LD_TestSuite/ldContext/not-a-context.jsonld"
}'
orionCurl --url /ngsi-ld/v1/subscriptions --payload "$payload" -H "Content-Type: application/ld+json"
echo
echo


echo "02. Create a subscription with an @context that does exist"
echo "=========================================================="
payload='{
  "description": "Notify me of all feedstock changes",
  "type": "Subscription",
  "entities": [
    {
      "type": "FillingSensor"
    }
  ],
  "watchedAttributes": ["filling"],
  "notification": {
    "attributes": ["filling", "location"],
    "format": "normalized",
    "endpoint": {
      "uri": "http://quantumleap:8668/v2/notify",
      "accept": "application/json"
    }
  },
   "@context": "http://fiware.github.io/NGSI-LD_TestSuite/ldContext/testContext.jsonld"
}'
orionCurl --url /ngsi-ld/v1/subscriptions --payload "$payload" -H "Content-Type: application/ld+json"
echo
echo


--REGEXPECT--
01. Create a subscription with an @context that doesn't exist
=============================================================
HTTP/1.1 503 Service Unavailable
Content-Length: 189
Content-Type: application/json
Date: REGEX(.*)

{
    "detail": "http://fiware.github.io/NGSI-LD_TestSuite/ldContext/not-a-context.jsonld",
    "title": "Unable to download context",
    "type": "https://uri.etsi.org/ngsi-ld/errors/LdContextNotAvailable"
}


02. Create a subscription with an @context that does exist
==========================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /ngsi-ld/v1/subscriptions/urn:ngsi-ld:Subscription:REGEX(.*)
Date: REGEX(.*)



--TEARDOWN--
brokerStop CB
dbDrop CB
